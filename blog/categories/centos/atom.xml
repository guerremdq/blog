<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: CentOS | Facundo Guerrero]]></title>
  <link href="http://www.facundoguerrero.com/blog/categories/centos/atom.xml" rel="self"/>
  <link href="http://www.facundoguerrero.com/"/>
  <updated>2013-11-12T22:06:23-03:00</updated>
  <id>http://www.facundoguerrero.com/</id>
  <author>
    <name><![CDATA[Facundo Guerrero]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[NFS & Iptables]]></title>
    <link href="http://www.facundoguerrero.com/blog/2012/01/15/nfs-iptables/"/>
    <updated>2012-01-15T08:36:36-03:00</updated>
    <id>http://www.facundoguerrero.com/blog/2012/01/15/nfs-iptables</id>
    <content type="html"><![CDATA[<p>Para usar iptables en un servidor nfs necesitamos especificar los puertos donde queremos que el servidor corra.</p>

<p>En caso que sea un servidor Debian tenemos que editar varios archivos</p>

<p>/etc/default/nfs-common</p>

<pre><code>STATDOPTS="--port 32765 --outgoing-port 32766"
</code></pre>

<p>/etc/default/nfs-kernel-server</p>

<pre><code>RPCMOUNTDOPTS="-p 32767"
</code></pre>

<p>/etc/default/quota</p>

<pre><code>RPCRQUOTADOPTS="-p 32769"
</code></pre>

<p>/etc/modprobe.d/local.conf</p>

<pre><code> options lockd nlm_udpport=32768 nlm_tcpport=32768
 options nfs callback_tcpport=32764
</code></pre>

<p>En caso que sea un servidor CentOS o Redhat editamos el siguiente archivo /etc/sysconfig/nfs</p>

<pre><code>LOCKD_TCPPORT=32768
LOCKD_UDPPORT=32768
MOUNTD_PORT=32767
RQUOTAD_PORT=32769
STATD_PORT=32765
STATD_OUTGOING_PORT=32766
</code></pre>

<p>Este es un ejemplo de los puertos que podemos usar.</p>

<p>Para asegurarnos que estos cambios tuvieron efecto podemos ver la salida del comando rpcinfo</p>

<pre><code>jack ~ # rpcinfo -p localhost
programa vers proto puerto
100000 2 tcp 111 portmapper
100000 2 udp 111 portmapper
100024 1 udp 32765 status
100024 1 tcp 32765 status
100021 1 udp 32768 nlockmgr
100021 3 udp 32768 nlockmgr
100021 4 udp 32768 nlockmgr
100021 1 tcp 32768 nlockmgr
100021 3 tcp 32768 nlockmgr
100021 4 tcp 32768 nlockmgr
100003 2 tcp 2049 nfs
100003 3 tcp 2049 nfs
100003 4 tcp 2049 nfs
100003 2 udp 2049 nfs
100003 3 udp 2049 nfs
100003 4 udp 2049 nfs
100005 1 udp 32767 mountd
100005 1 tcp 32767 mountd
100005 2 udp 32767 mountd
100005 2 tcp 32767 mountd
100005 3 udp 32767 mountd
100005 3 tcp 32767 mountd
</code></pre>

<p>Ahí se ve que los puertos fueron seteados correctamente.</p>

<p><strong>IPTABLES</strong></p>

<p>Primero guardamos nuestra configuración para poder agregarle las nuevas reglas.</p>

<blockquote><p>iptables-save > iptables-nfs</p></blockquote>

<p>editamos el archivo iptables-nfs y agregamos las nuevas reglar para permitir el acceso a servidor nfs solo para nuestra red local
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>IPTABLES </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>#NFS PORTS
</span><span class='line'>-A INPUT -s 192.168.0.0/24 -p tcp -m tcp --dport 2049 -j ACCEPT
</span><span class='line'>-A INPUT -s 192.168.0.0/24 -p udp -m udp --dport 2049 -j ACCEPT
</span><span class='line'>-A INPUT -p tcp -m tcp --dport 2049 -j DROP
</span><span class='line'>#Lockd upd &amp; tcp
</span><span class='line'>-A INPUT -s 192.168.0.0/24 -p tcp -m tcp --dport 32768 -j ACCEPT
</span><span class='line'>-A INPUT -s 192.168.0.0/24 -p udp -m udp --dport 32768 -j ACCEPT
</span><span class='line'>-A INPUT -p tcp -m tcp --dport 32768 -j DROP
</span><span class='line'>-A INPUT -p udp -m udp --dport 32768 -j DROP
</span><span class='line'>#portmaper
</span><span class='line'>-A INPUT -s 192.168.0.0/24 -p tcp -m tcp --dport 111 -j ACCEPT
</span><span class='line'>-A INPUT -p tcp -m tcp --dport 111 -j DROP
</span><span class='line'>#Mountd
</span><span class='line'>-A INPUT -s 192.168.0.0/24 -p tcp -m tcp --dport 32767 -j ACCEPT
</span><span class='line'>-A INPUT -p tcp -m tcp --dport 32767 -j DROP
</span><span class='line'>#quota
</span><span class='line'>-A INPUT -s 192.168.0.0/24 -p tcp -m tcp --dport 32769 -j ACCEPT
</span><span class='line'>-A INPUT -p tcp -m tcp --dport 32769 -j DROP
</span><span class='line'>#statd  
</span><span class='line'>-A INPUT -s 192.168.0.0/24 -p tcp -m tcp --dport 32765 -j ACCEPT
</span><span class='line'>-A INPUT -p tcp -m tcp --dport 32765 -j DROP
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Guardamos el archivo con las siguientes reglas y lo restauramos.</p>

<blockquote><p>iptables-restore iptables-nfs</p></blockquote>

<p>Ahora solo van a poder ingresar al nfs los hosts en la red 192.168.0.0/24</p>

<p>Fuentes :</p>

<p>http://wiki.debian.org/SecuringNFS</p>

<p>http://wiki.debian.org/iptables</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Creación de vps con openvz]]></title>
    <link href="http://www.facundoguerrero.com/blog/2011/11/10/creacion-de-vps-con-openvz/"/>
    <updated>2011-11-10T10:01:39-03:00</updated>
    <id>http://www.facundoguerrero.com/blog/2011/11/10/creacion-de-vps-con-openvz</id>
    <content type="html"><![CDATA[<p>En el post anterior explique como instalar y configurar el kernel de OpenVZ, ahora vamos a hablar sobre como utilizarlo. Nos vamos a centrar en las tareas de crear , eliminar y cambiar las configuraciones de los vps.</p>

<p>Lo primero que necesitamos hacer es descargarnos algún template para crear el vps. Aca estan los templates disponibles http://download.openvz.org/template/precreated/ .  Los templates que descarguemos tenemos que ponerlos en /vz/templates/cache .</p>

<blockquote><p>cd /vz/templates/cache</p>

<p>wget http://download.openvz.org/template/precreated/debian-6.0-x86_64.tar.gz</p></blockquote>

<p>Ahora vamos a crear nuestro primer vps con el template que acabos de descargar</p>

<blockquote><p>vzctl create 101 --ostemplate debian-6.0-x86_64 --ipadd 192.168.0.100</p>

<p>vzctl set 101 --hostname debian-vps --onboot yes --nameserver 8.8.8.8 --nameserver 4.2.2.1 --save</p></blockquote>

<p>Con esto ya creamos el nuevo vps y definimos algunos valores como la ip, el hostnme y los servidores dns. Ahora tenemos que prender nuestro server</p>

<blockquote><p>vzctl start 101</p></blockquote>

<p>Si queremos ejecutar comandos dentro del vps podemos hacerlo haciendo</p>

<blockquote><p>vzctl exec 101 passwd</p></blockquote>

<p>así cambiamos la password de root.</p>

<p>También podemos entrar dentro del vps :</p>

<blockquote><p>vzctl enter 101</p></blockquote>

<p>Ahora vamos a ver los comandos para apagarlo y y eliminarlo</p>

<blockquote><p>vzctl stop 101 #detiene el vps</p>

<p>vzctl destroy 101 #elimina el vps del disco rigido</p></blockquote>

<p>Para ver los vps que tenemos corriendo en nuestro servidor tenemos el siguiente comando</p>

<blockquote><p>vzlist -a</p></blockquote>

<p>Para mas informacion pueden hacer</p>

<blockquote><p>man vzctl</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Vlans en CentOS]]></title>
    <link href="http://www.facundoguerrero.com/blog/2011/11/10/vlans-en-centos/"/>
    <updated>2011-11-10T09:34:59-03:00</updated>
    <id>http://www.facundoguerrero.com/blog/2011/11/10/vlans-en-centos</id>
    <content type="html"><![CDATA[<p>Si en nuestra red estamos usando VLAN's vamos a tener que taggearla en la interfaz ethernet.</p>

<p>Lo podemos hacer de la siguiente manera (vamos a suponer que estamos usando la vlan 107 ):</p>

<blockquote><p>vconfig add eth0 107
ifconfig eth0.107  ip.del.equipo netmsk xxx.xxx.xxx.x</p></blockquote>

<p>De esta manera ya tendríamos nuestra interfaz eth0 con la vlan 107.</p>

<p>También podemos hacer esto edit</p>

<p>ando los archivos de configuración de la interfaz, así cuando el equipo se reinicie no perdamos la configuración .</p>

<p>Tenemos que editar los archivos que se encuentran en : /etc/sysconfig/network-scripts</p>

<p>El primer archivo a editar es ifcfg-eth0 que nos debería quedar de esta manera:</p>

<pre><code>DEVICE=eth0
HWADDR=00:21:xx:xx:xx:xx:xx
NM_CONTROLLED=yes
ONBOOT=yes
BOOTPROTO=none
TYPE=Ethernet
IPV6INIT=no
USERCTL=no
</code></pre>

<p>Ahora creamos el archivo eth0.107 ahí vamos a especificar la dirección ip y la vlan</p>

<pre><code>GATEWAY=ip.del.gateway
DNS1=8.8.8.8
DEVICE=eth0.107
BOOTPROTO=none
NETMASK=255.255.255.0
DNS2=xxx.xxx.xxx.xxx
HWADDR=00:21:xx:xx:ax:xx
IPADDR=ip.del.equipo
ONBOOT=yes
VLAN=yes
</code></pre>

<p>De esta manera ya tendríamos configurada la vlan 107 en nuestra interfaz ethernet.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Incrementando la memoria de nuestros VPS]]></title>
    <link href="http://www.facundoguerrero.com/blog/2011/11/04/incrementando-la-memoria-de-nuestros-vps/"/>
    <updated>2011-11-04T09:25:40-03:00</updated>
    <id>http://www.facundoguerrero.com/blog/2011/11/04/incrementando-la-memoria-de-nuestros-vps</id>
    <content type="html"><![CDATA[<p>Acá dejo unos comandos para poder editar la ram que tienen asigandos nuestros VPS.</p>

<p><strong>64MB Guaranteed, 128MB Burstable</strong></p>

<pre><code>cid=102
vzctl set ${cid} --vmguarpages 64M --save
vzctl set ${cid} --oomguarpages 64M --save
vzctl set ${cid} --privvmpages 64M:128M --save
</code></pre>

<p><strong>256MB Guaranteed, 512MB Burstable</strong></p>

<pre><code>cid=102
vzctl set ${cid} --vmguarpages 256M --save
vzctl set ${cid} --oomguarpages 256M --save
vzctl set ${cid} --privvmpages 256M:512M --save
</code></pre>

<p><strong>512MB Guaranteed, 1024MB Burstable</strong></p>

<pre><code>cid=102
vzctl set ${cid} --vmguarpages 512M --save
vzctl set ${cid} --oomguarpages 512M --save
vzctl set ${cid} --privvmpages 512M:1024M --save
</code></pre>

<p><strong>1024MB Guaranteed, 2048MB Burstable</strong></p>

<pre><code>cid=102
vzctl set ${cid} --vmguarpages 1024M --save
vzctl set ${cid} --oomguarpages 1024M --save
vzctl set ${cid} --privvmpages 1024M:2048M --save
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OpenVZ en CentOS]]></title>
    <link href="http://www.facundoguerrero.com/blog/2011/10/28/openvz-en-centos/"/>
    <updated>2011-10-28T19:12:34-03:00</updated>
    <id>http://www.facundoguerrero.com/blog/2011/10/28/openvz-en-centos</id>
    <content type="html"><![CDATA[<p><img src="http://upload.wikimedia.org/wikipedia/commons/b/bb/OpenVZ-logo.png" alt="" /><img src="http://upload.wikimedia.org/wikipedia/en/a/a9/CentOS_full_logo.svg" alt="" /></p>

<p>Según wikipedia :</p>

<p>OpenVZ es una tecnología de <a href="http://es.wikipedia.org/wiki/Virtualizaci%C3%B3n">virtualización</a> en el nivel de <a href="http://es.wikipedia.org/wiki/Sistema_operativo">sistema operativo</a> para <a href="http://es.wikipedia.org/wiki/Linux_%28n%C3%BAcleo%29">Linux</a>. OpenVZ permite que un servidor físico ejecute múltiples instancias de sistemas operativos aislados, conocidos como Servidores Privados Virtuales (SPV o VPS en inglés) o Entornos Virtuales (EV)</p>

<p>Para podes instalar OpenVZ lo primero que tenemos que hacer es agregar el repositorio para eso vamos a ejecutar los siguientes comandos:</p>

<blockquote><p>cd /etc/yum.repos.d</p>

<p>wget http://download.openvz.org/openvz.repo</p>

<p>rpm --import http://download.openvz.org/RPM-GPG-Key-OpenVZ</p></blockquote>

<p>editen el archivo openvz.repo para asegurarse que enable sea igual a 1 para la versión de centos que están usando y 0 para las demás</p>

<p>Ahora instalamos el kernel :</p>

<blockquote><p>yum install vzkernel</p></blockquote>

<p>Hay que asegurarse que en el grub el kernel este elegido como default.</p>

<p>Instalamos las utilidades de administración:</p>

<blockquote><p>yum install vzctl vzquota</p></blockquote>

<p>Configuramos la red, editamos el archivo /etc/sysctl.conf , nos aseguramos que esten estas lineas :</p>

<pre><code>net.ipv4.ip_forward = 1
net.ipv4.conf.default.proxy_arp = 0
net.ipv4.conf.all.rp_filter = 1
kernel.sysrq = 1
net.ipv4.conf.default.send_redirects = 1
net.ipv4.conf.all.send_redirects = 0
net.ipv4.icmp_echo_ignore_broadcasts=1
net.ipv4.conf.default.forwarding=1
</code></pre>

<p>En el archivo etc/vz/vz.conf tiene que tener esta linea : NEIGHBOUR_DEVS=all , por ultimo tenemos que deshabilitar selinux para esto editamos el archivo /etc/selinux/conf y ponemos  SELINUX=disabled.</p>

<p>Ahora reiniciamos y ya deberíamos poder utilizarlo</p>
]]></content>
  </entry>
  
</feed>
